library(stdcells) {

  delay_model : table_lookup;

  time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1uA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1nW";
  capacitive_load_unit (1,pf);

  cell (INV) {
    area : 0.5476;
    pin(A)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!A)";
      timing() {
        related_pin : "A";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (NOR2) {
    area : 0.8288;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!(A+B))";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (NAND2) {
    area : 0.8288;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!(A&B))";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (DFF) {
    area : 4.5029;
    ff (I_Q,I_QN) {
      next_state : "D";
      clocked_on : "CLK";
    }
    pin(CLK)  {
      direction : input;
      clock : true;
    }
    pin(D)  {
      direction : input;
    }
    pin(Q)  {
      direction : output;
      function : "I_Q";
      timing() {
        related_pin : "CLK";
        timing_type : rising_edge;
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (A2DFF) {
    area : 5.6203;
    ff (I_Q,I_QN) {
      next_state : "A&B";
      clocked_on : "CLK";
    }
    pin(CLK)  {
      direction : input;
      clock : true;
    }
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Q)  {
      direction : output;
      function : "I_Q";
      timing() {
        related_pin : "CLK";
        timing_type : rising_edge;
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (M2DFF) {
    area : 6.6674;
    ff (I_Q,I_QN) {
      next_state : "((!S0)&A) + (S0&B)";
      clocked_on : "CLK";
    }
    pin(CLK)  {
      direction : input;
      clock : true;
    }
    pin(S0)  {
      direction : input;
    }
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Q)  {
      direction : output;
      function : "I_Q";
      timing() {
        related_pin : "CLK";
        timing_type : rising_edge;
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (AO21) {
    area : 1.4763;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }    
    pin(C)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "((A&B) + C)";
      timing() {
        related_pin : "A B C";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (AOI21) {
    area : 1.1618;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(C)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!((A&B) + C))";
      timing() {
        related_pin : "A B C";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (BUF) {
    area : 0.8288;
    pin(A)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(A)";
      timing() {
        related_pin : "A";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (MUX2) {
    area : 2.0017;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(S0)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(((!S0)&A) + (S0&B))";
      timing() {
        related_pin : "A B S0";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (OA21) {
    area : 1.4356;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(C)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "((A + B) & C)";
      timing() {
        related_pin : "A B C";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (OAI21) {
    area : 1.1396;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(C)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!((A + B) & C))";
      timing() {
        related_pin : "A B C";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (AND2) {
    area : 1.1322;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(A&B)";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (OR2) {
    area : 1.1396;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(A+B)";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (XOR2) {
    area : 1.702;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(A ^ B)";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (XNOR2) {
    area : 1.7353;
    pin(A)  {
      direction : input;
    }
    pin(B)  {
      direction : input;
    }
    pin(Z)  {
      direction : output;
      function : "(!(A^B))";
      timing() {
        related_pin : "A B";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }


  cell (mux2) {
    area : 1.7279;
    pin(a)  {
      direction : input;
    }
    pin(b)  {
      direction : input;
    }
    pin(s)  {
      direction : input;
    }    
    pin(s_inv)  {
      direction : input;
    }
    pin(z)  {
      direction : output;
      function : "((s_inv&a) + (s&b))";
      timing() {
        related_pin : "a b s s_inv";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }

  cell (nmux2) {
    area : 1.4023;
    pin(a)  {
      direction : input;
    }
    pin(b)  {
      direction : input;
    }
    pin(s)  {
      direction : input;
    }    
    pin(s_inv)  {
      direction : input;
    }
    pin(z)  {
      direction : output;
      function : "(!((s_inv&a)+(s&b)))";
      timing() {
        related_pin : "a b s s_inv";
        cell_rise(scalar) {
          values("0.0");
        }
        rise_transition(scalar) {
          values("0.0");
        }
        cell_fall(scalar) {
          values("0.0");
        }
        fall_transition(scalar) {
          values("0.0");
        }
      }
    }
  }


}
